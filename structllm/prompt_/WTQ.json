[
    {
      "role": "system",
      "content": "Now you are learning to write conditional graph queries for natural language questions. \nAnd conditional graph query function is:\ndef get_information(relation, tail_entity, head_entity, key, value):\n\"\"\"\n    This function retrieves information by querying a data source using a given relation and tail entity as search criteria.\n    \n    Args:\n        relation (str): The relation to the query that matches the tail_entity or contains the  head_entity.\n        tail_entity (str): The tail entity associated with the relation.\n        head_entity (str): The head entity belongs to the relation.\n        key (str):  The key to query that matches the tail_entity or head_entity.\n        value (str):  The value associated with or belongs to the key.\n        \n    Returns:\n        list: A list of query results.\n    \"\"\"\n\nTo finish the question correctly, you can combine the Set and Calculator functions.\n\nSet functions:\n- set_union(set1, set2)\n- set_intersection(set1, set2)\n- set_difference(set1, set2)\n- set_negation(set1)\n...\n\nYou also can use previous_row and next_row two functions to find the previous or next information.\n\nYour task is to break down the original natural language problem step by step with given all relation types and a corresponding example as schema with the format of \"relation:example\". Following are some examples.\n\nNote: in get_information function, tail_entity and head_entity cannot occur together."
    },
    {"role": "user","content": "Schema: Date:14 February 1976|Tie no:Replay|row_number:6|Score:1â€“2|Home team:Derby County|Away team:Crystal Palace.\nQuestion: who was the home team in the game on the top of the table?"},{"role": "assistant","content": "## Target type: {home team}\n## Query:\nStep1: Find the game on the top of the table\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the home team of output_of_query1\nQuery2: \"get_information(relation='Home team', tail_entity='output_of_query1')\""},
    {"role": "user","content": "Schema: Fastest Lap:Troy Corser|Report:Report|Pole Position:Troy Bayliss|Round:R2|Circuit:Losail|row_number:5|Date:3 August|Country:Europe|Winning Team:Yamaha Motor Italia|Winning Rider:Noriyuki Haga.\nQuestion: who did the most pole position what is his or her name"},{"role": "assistant","content": "## Target type: {'Pole Position'}\n## Query:\nStep1: Find the entity in Pole Position that appears the most.\nQuery1: \"get_information(relation='Pole Position', tail_entity>='most')\"\nStep2: Find the Pole Position of output_of_query1.\nQuery2: \"get_information(relation='Pole Position', head_entity='output_of_query1')\""},
    {"role": "user","content": "Schema: Silver:0|Gold:0|Bronze:2|Nation:Venezuela\\xa0(VEN)|row_number:5|Rank:7|Total:1.\nQuestion: how many nations scored more total medals than brazil?"},{"role": "assistant","content": "## Target type: {number of nations}\n## Query:\nStep1: Find the entity that is Brazil\nQuery1: \"get_information(relation='Nation', tail_entity='Brazil')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity whose total medals is larger than output_of_query2\nQuery3: \"get_information(relation='Total', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\""},
    {"role": "user","content": "Schema: Host:University of Texas|Rnd:1|Venue:Thomas Assembly Center|State:Maryland|City:Norfolk|row_number:16|Region:East.\nQuestion: total number of venues that hosted first and second round games"},{"role": "assistant","content": "## Target type: {number}\n## Query:\nStep1: Find the venues that hosted first round games\nQuery1: \"get_information(relation='Rnd', tail_entity='1')\"\nStep2: Find the venues that hosted second round games\nQuery2: \"get_information(relation='Rnd', tail_entity='2')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\""},
    {"role": "user","content": "Schema: row_number:9|No. in\\\\nseries:142|Written by:Adam Markowitz & Tom Devanney|Original air date:April\\xa015,\\xa01996|Title:\"I, Bowl Buster\"|Production\\\\ncode:60108|Directed by:Shelley Jensen|No. in\\\\nseason:12.\nQuestion: what was the last episode called?"},{"role": "assistant","content": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\""},
    {"role": "user","content": "Schema: Number of Votes:60,048|Winner:James A. Leach|row_number:46|Party Affiliation:Republican|Loser:John R. Schmidhauser|Year:1946|Percentage of Votes:50% - 49%.\nQuestion: what winner received the least number of votes?"},{"role": "assistant","content": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Number of Votes\nQuery1: \"get_information(relation='Number of Votes')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Votes\nQuery3: \"get_information(relation='Number of Votes', tail_entity='output_of_query2')\"\nStep4: Find the winner of output_of_query3\nQuery4: \"get_information(relation='Winner', head_entity='output_of_query3')\""},
    {"role": "user","content": "Schema: Islam:96.67%|n/a:1.16%|Other:0.04%|None\\xa0/ Atheism:6.09%|Christianity:0.39%|Buddhism:0.01%|Ethnicity:Kyrgyz|Judaism:0.03%|row_number:13.\nQuestion: which ethnicity is previous from dungan'"},{"role": "assistant","content": "## Target type: {ethnicity}\n## Query:\nStep1: Find the entity that Ethnicity is Dungan\nQuery1: \"get_information(relation='Ethnicity', tail_entity='Dungan')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Ethnicity of output_of_query4\nQuery5: \"get_information(relation='Ethnicity', head_entity='output_of_query4')\""},
    {"role": "user","content": "Schema: Residence:Morris Plains|row_number:68|Name:Jerry Green|Party:Rep|First served:2008|District:District 31.\nQuestion: angel fuentes and gilbert wilson were both from which residence?"},{"role": "assistant","content": "## Target type: {residence}\n## Query:\nStep1: Find the entity named Angel Fuentes\nQuery1: \"get_information(relation='Name', tail_entity='Angel Fuentes')\"\nStep2: Find the residence of output_of_query1\nQuery2: \"get_information(relation='Residence', head_entity='output_of_query1')\"\nStep3: Find the entity named Gilbert Wilson\nQuery3: \"get_information(relation='Name', tail_entity='Gilbert Wilson')\"\nStep4: Find the residence of output_of_query3\nQuery4: \"get_information(relation='Residence', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\""}
]